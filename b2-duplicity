#!/usr/bin/env bash
set -eu

_cmd=$(basename "${0}")
export PASSPHRASE="$(head -n 1 "${HOME}/.backup_key")"
export AWS_ACCESS_KEY_ID=$(awk -F '=' '/KEY_ID/ {print $2}' "${HOME}/.backblaze" | tr -d ' ')
export AWS_SECRET_ACCESS_KEY=$(awk -F '=' '/APPLICATION_KEY/ {print $2}' "${HOME}/.backblaze" | tr -d ' ')
S3_ENDPOINT_URL="https://s3.eu-central-003.backblazeb2.com"
SOURCE="</PATH/TO/DIRECTORY>"
BUCKET="<BUCKET_NAME>"
DEST="par2+boto3+s3://${BUCKET}"
NAME="b2-backup"
FULL_IF_OLDER="1M"
# VOL_SIZE=204800  # 200MB (default)
VOL_SIZE=1024000  # 1GB

backup() {
  METHOD="incremental"
  if [ "$#" -ge 2 ]
  then
    if ! [[ "$2" =~ ^(full|incr|incremental)$ ]]
    then
      echo "Usage: ${_cmd} backup [full|incremental]"
      exit
    else
      METHOD="${2}"
    fi
  fi
  duplicity "${METHOD}" \
    --name "${NAME}" \
    --allow-source-mismatch \
    --full-if-older-than "${FULL_IF_OLDER}" \
    --volsize "${VOL_SIZE}" \
    --s3-endpoint-url "${S3_ENDPOINT_URL}" \
    -v5 \
    --exclude-if-present ".owncloudsync.log" \
    --exclude-if-present ".sync*" \
    --exclude-if-present "Desktop.ini" \
    "${SOURCE}" "${DEST}"
}

verify() {
  duplicity verify \
    --name backup \
    --s3-endpoint-url "${S3_ENDPOINT_URL}" \
    -v5 \
    "${DEST}" "${SOURCE}"
}

list() {
  duplicity --s3-endpoint-url "${S3_ENDPOINT_URL}" list-current-files "${DEST}"
}

clean() {
  duplicity --s3-endpoint-url "${S3_ENDPOINT_URL}" cleanup "${DEST}"
}

restore() {
  if [ "$#" -lt 3 ]
  then
    echo "Usage: ${_cmd} restore <time (1D, 1M, 2023-01-01)> <destination> [<file>]"
    exit
  fi
  args=( "duplicity" "restore" "--s3-endpoint-url \"${S3_ENDPOINT_URL}\"" "-v5" "--restore-time ${2}" )
  if [ "$#" -ge 4 ]
  then
    args+=( "--file-to-restore \"${4}\"" )
  fi
  args+=( "${DEST}" "\"${3}\"")
  eval "${args[@]}"
}

remove_older_than() {
  if [ "$#" -lt 2 ]
  then
    echo "Usage: ${_cmd} remove_older_than <time (1D, 1M, 2023-01-01)>"
    exit
  fi
  duplicity remove-older-than --s3-endpoint-url "${S3_ENDPOINT_URL}" "${2}" "${DEST}"
}

if [ "$#" -lt 1 ]
then
  echo "Usage: ${_cmd} (backup|verify|restore|list|clean|remove_older_than)"
  exit 1
fi
case "$1" in
  backup)
    backup "$@"
    ;;
  verify)
    verify
    ;;
  list)
    list
    ;;
  clean)
    clean
    ;;
  restore)
    restore "$@"
    ;;
  remove_older_than)
    remove_older_than "$@"
    ;;
  *)
    echo "Usage: ${_cmd} (backup|verify|restore|list|clean|remove_older_than)"
    ;;
esac
